function ModelForm(){}ModelForm.inherit(jQuery);ModelForm.onForm=function(form,fieldSelector){var props={};for(var i in this.prototype){props[i]=this.prototype[i];}var origForm=form.get(0);$.extend(true,form,props);form.form=$(origForm);form._fields={};fieldSelector=(typeof fieldSelector=="string")?fieldSelector:"input, textarea, select";var fields=form.form.find(fieldSelector);if(fields){for(var i=0;i<fields.length;i++){var field=$(fields[i]);var fieldName=field.attr("name");var realFieldName=fieldName;if(!fieldName){continue;}var fieldNameParts=fieldName.replace(/[^a-z0-9]+/i," ").split();if(fieldNameParts.length>1){for(var n=0;n<fieldNameParts.length;n++){if(n==0){fieldName=fieldNameParts[n].toLowerCase();}else{fieldName+=fieldNameParts[n].substring(0,1).toUperrCase()+fieldNameParts[n].substring(1).toLowerCase();}}}if(typeof form._fields[fieldName]!="undefined"){if(typeof LOG!="undefined"){LOG.debug(">>> "+fieldName+" was already parsed");}continue;}if(typeof LOG!="undefined"){LOG.debug(">>> FieldName: "+fieldName);}form._fields[fieldName]=field;form.__defineGetter__("storableProps",form.getStorableProps);form.__defineSetter__("storableProps",form.setStorableProps);var methName=fieldName.substring(0,1).toUpperCase()+fieldName.substring(1);if(field.attr("type")=="checkbox"){var t="(function() {return function is"+methName+"() {return this.getField('"+realFieldName+"').attr('checked');}})()";form["is"+methName]=eval(t);form.__defineGetter__(fieldName,form["is"+methName]);t="(function () {return function set"+methName+"(bool) {if (typeof bool != 'undefined' && bool) {this.getField('"+realFieldName+"').attr('checked', 'checked');} else {this.getField('"+fieldName+"').removeAttr('checked');} }})()";form["set"+methName]=eval(t);form.__defineSetter__(fieldName,form["set"+methName]);}else{if(field.attr("type")=="radio"){var t="(function() {return function is"+methName+"() {var checked = null; this.getField('"+realFieldName+"').each(function(index, element) {var $element = $(element); if ($element.attr('checked')) {checked = $element.val()}});return checked;}})()";form["get"+methName]=eval(t);form.__defineGetter__(fieldName,form["get"+methName]);t="(function () {return function set"+methName+"(val) {this.getField('"+realFieldName+"').each(function(index, element) {var $element = $(element);if ($element.val() == val) {$element.attr('checked', 'checked');} else {$element.removeAttr('checked');} });}})()";form["set"+methName]=eval(t);form.__defineSetter__(fieldName,form["set"+methName]);}else{var t="(function() {return function get"+methName+"() {return this.getField('"+realFieldName+"').val();}})()";form["get"+methName]=eval(t);form.__defineGetter__(fieldName,form["get"+methName]);var t="(function() {return function set"+methName+"(value) {this.getField('"+realFieldName+"').val(value);}})()";form["set"+methName]=eval(t);form.__defineSetter__(fieldName,form["set"+methName]);}}}}return form;};ModelForm.prototype._storableProps=null;ModelForm.prototype.getField=function(a){return this.form.find("*[name="+a+"]");};ModelForm.prototype.clear=function(){};ModelForm.prototype.populateWith=function(a){if(typeof LOG!="undefined"){LOG.debug("ModelForm.populateWith");}if(typeof a=="object"&&a!=null){for(var b in a){if(typeof this._fields[b]!="undefined"){this[b]=a[b];}}}};ModelForm.prototype.setStorableProps=function(d){var b=(d instanceof Array)?d:new Array(d);this._storableProps=new Array();for(var c=0;c<b.length;c++){if(typeof b[c]=="string"&&b[c].length>0){this._storableProps.push(b[c]);}}};ModelForm.prototype.getStorableProps=function(){if(this._storableProps==null){var b=new Array();for(var a in this._fields){b.push(a);}this._storableProps=b;}return this._storableProps;};ModelForm.prototype.toStorable=function(){var c=this.storableProps;var b={};for(var a=0;a<c.length;a++){b[c[a]]=this[c[a]];}return b;};