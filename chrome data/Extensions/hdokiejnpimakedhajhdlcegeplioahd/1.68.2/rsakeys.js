function upload_rsa_keys(G,A,I){var H="";var K="";var E="";if(!A){H=encode_public_key(G);K="LastPassPrivateKey<"+encode_private_key(G)+">LastPassPrivateKey";E=AES.bin2hex(atob(AES.Encrypt({pass:g_local_key+g_local_key.substring(0,16),data:K,b64:true,bits:256,mode:"cbc"}))).toUpperCase()}var B=g_local_key;
var F="";if(B!=null&&B!=""){F=AES.bin2hex(B);F=F.toUpperCase()}var D=F==""?"":SHA256(F);var C=F==""?"":SHA256(E);var I=(typeof(forcewriteprivatearg)=="undefined"||forcewriteprivatearg==0)?0:forcewriteprivatearg;var J="privatekeyenc="+LP.en(E);J+="&publickey="+LP.en(H);J+="&forcewriteprivate="+LP.en(I);
J+="&userkeyhexhash="+LP.en(D);J+="&privatekeyenchexhash="+LP.en(C);J+="&from="+LP.en("crplugin");lpMakeRequest(base_url+"uploadrsakeys.php",J,upload_rsa_keys_response,null)}function upload_rsa_keys_response(B){if(B.readyState==4&&B.status==200&&B.responseXML&&B.responseXML.documentElement){var D=B.responseXML.documentElement;
var A=D.getElementsByTagName("ok");var C="";if(A.length>0){C=A[0].getAttribute("privatekeyenchex");if(C!=null&&C!=""){writersaprivatekeyenchextodb(C);readrsaprivatekeyhexfromdb(true)}}}}function writersaprivatekeyenchextodb(A){if(g_username==null||g_username==""){return}console.log("writersaprivatekeyenchextodb");
lpSaveData(A,"rsakey")}function readrsaprivatekeyhexfromdb(D,E,C,F){if(g_username==null||g_username==""||g_local_key==null){return""}var A=typeof(D)=="undefined"?0:1;if(!A&&lp_rsaprivatekeyhex!=""){return lp_rsaprivatekeyhex}rsa_clearvars();var B=opendb();createDataTable(B);if(B){B.transaction(function(G){G.executeSql("SELECT * FROM LastPassData WHERE username_hash=? AND type=?",[db_prepend(g_username_hash),"rsakey"],function(H,I){if(I.rows.length>0){var J=I.rows.item(0)["data"];
if(J==""||J==null){DeleteFromDB("rsakey");return}if(C&&SHA256(J)!=C){console.warn("RSA Hashs didn't match. Deleting local!");DeleteFromDB("rsakey");return}var L=AES.Decrypt({pass:g_local_key+g_local_key.substring(0,16),data:btoa(AES.hex2bin(J)),b64:true,bits:256,mode:"cbc"});var K=rsa_extractprivatekey(L);
if(K==null){console.warn("failed to extract rsa key from file "+K);lpReportError("readrsaprivatekeyhexfromfile : failed to extract rsa key from file - did we change our password on another PC? datahex.length="+J.length+" decryptedbin.length="+L.length);DeleteFromDB("rsakey");return}console.log("readrsaprivatekeyhexfromfile : all is good!");
lp_rsaprivatekeyenchex=J;lp_rsaprivatekeyhex=K;lp_rsaprivatekeyenchexserverhash=SHA256(lp_rsaprivatekeyenchex);if(F){F(lp_rsaprivatekeyhex)}}else{if(E){upload_rsa_keys(null,true)}}},function(H,I){console.log(I)})})}}function rsa_extractprivatekey(D){var A=19;if(D.length<=2*A){lpReportError("rsa_extractprivatekey : failed to extract rsaprivatekeyhex : length="+D.length+" is too short");
return null}if(D.indexOf("LastPassPrivateKey<")!=0){lpReportError("rsa_extractprivatekey : failed to extract rsaprivatekeyhex : expected_prefix='LastPassPrivateKey<'   actual_prefix='"+D.substring(0,19)+"'");return null}var B=D.indexOf(">LastPassPrivateKey");if(B!=(D.length-A)){lpReportError("rsa_extractprivatekey : failed to extract rsaprivatekeyhex : expected_prefix='LastPassPrivateKey<'   actual_prefix='"+D.substring(0,19)+"'");
return null}var C=D.substring(A,B);if(C.length<2000){lpReportError("rsa_extractprivatekey : failed to extract rsaprivatekeyhex : we expect a length of approx 2426    actual_length="+C.length);return null}return C}function rsa_userchangedpassword(){console.log("rsa_userchangedpassword : called");DeleteFromDB("rsakey");
rsa_clearvars()}function rsa_clearvars(){lp_rsaprivatekeyhex="";lp_rsaprivatekeyenchex="";lp_rsaprivatekeyenchexserverhash=""}var lppendingsharests=0;function rsa_setpendingsharests(A){lppendingsharests=(typeof(A)!="undefined"&&A)?0:new Date().getTime()}function rsa_acceptpendingshares(a){if(!lploggedin||lploggedinoffline||g_local_key==null){return
}if(lp_rsaprivatekeyhex!=""){rsaprivatekeyhex=lp_rsaprivatekeyhex}else{if(!a){readrsaprivatekeyhexfromdb(false,null,null,rsa_acceptpendingshares)}return}if(g_pendings.length==0){return}var H=new Date().getTime();if((H-lppendingsharests)<10000){console.log("lprsa_acceptpendingshares : skipping because we were already called very recently");
return}rsa_setpendingsharests();var N=[];for(var U in g_pendings){var P=g_pendings[U];if(P.shareautoaccept!=1){continue}var F=new RSAKey();if(!parse_private_key(F,lp_rsaprivatekeyhex)){console.error("Private key could not be parsed while auto accepting shares");return}var Z=P.sharekeyenchex;var I=F.decrypt(Z);
if(I==""){console.error("Share key bin empty while auto accepting shares");return}var Y=AES.bin2hex(I);var Q=dec(P.sharename,I);var E=dec(P.sharegroup,I);var G=dec(P.username,I);var B=dec(P.password,I);var W=dec(P.extra,I);var A=true;var K={};for(U in P.shareafids){K[U]=dec(P.shareafids[U],I);if(P.shareafids[U]!=""&&K[U]==""){A=false;
break}}if((P.sharename!=""&&Q=="")||(P.sharegroup!=""&&E=="")||(P.username!=""&&G=="")||(P.password!=""&&B=="")||(P.extra!=""&&W=="")||!A){lpReportError("lprsa_acceptpendingshares : failing autoaccept of share because we failed to decrypt at least one value");continue}var b=lpenc(Q);var M=lpenc(E);var J=lpenc(G);
var C=lpenc(B);var D=lpenc(W);var A=true;var V={};for(U in K){V[U]=lpenc(K[U]);if(K[U]!=""&&V[U]==""){A=false;break}}if((Q!=""&&b=="")||(E!=""&&M=="")||(G!=""&&J=="")||(B!=""&&C=="")||(W!=""&&D=="")||!A){lpReportError("lprsa_acceptpendingshares : failing autoaccept of share because we failed to reencrypt at least one value");
continue}var R={aid:P.id,name:b,group:M,username:J,password:C,extra:D};var O=0;for(U in V){R["afid"+O]=U;R["afidv"+O]=V[U];++O}R.numafids=O;N.push(R)}if(N.length>0){var X="cmd="+LP.en("autoacceptshares")+"&from="+LP.en("crplugin")+"&numshares="+LP.en(N.length);var L=0;for(var U in N){var T="&share"+L;
++L;for(var S in N[U]){X+=T+S+"="+LP.en(N[U][S])}}console.log("rsa_acceptpendingshares : issuing server request to autoaccept "+N.length+" shares");lpMakeRequest(base_url+"showacceptshare.php",X,rsa_acceptpendingsharesresponse)}else{console.warn("rsa_acceptpendingshares : no shares to autoaccept so not issuing server request")
}}function rsa_acceptpendingsharesresponse(B){if(B.readyState!=4){return}console.log("rsa_acceptpendingsharesresponse : received response from server");if(B.status!=200){lpReportError("lprsa_acceptpendingsharesresponse : request failed status="+B.status);return}if(B.responseXML==null||B.responseXML.documentElement==null){lpReportError("lprsa_acceptpendingsharesresponse : request failed xml invalid A text="+B.responseText);
return}var C=B.responseXML.documentElement;var A=C.getElementsByTagName("ok");if(!A||A.length==0){lpReportError("lprsa_acceptpendingsharesresponse : request failed xml invalid B text="+B.responseText);return}get_accts()}function rsa_acceptshareeautopushes(){};
