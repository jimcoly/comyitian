/*
TooManyTabs for Chrome - License Agreement

Visibo Limited gives you permission to make verbatim copies of the 'TooManyTabs for Chrome' software (the "Software") without restriction, so long as your copies include a copy of this license and all of the original copyright notices and associated disclaimers. You may not distribute modified source code. You may not charge a fee for the Software or claim that the Software is yours. You may not use the name Visibo to endorse or promote products derived from the Software without prior written permission.

THE SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE. UNDER NO CIRCUMSTANCES SHALL VISIBO LIMITED BE LIABLE TO YOU OR ANY OTHER PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY KIND RELATED TO OR ARISING OUT OF YOUR USE OF THE SOFTWARE, EVEN IF VISIBO LIMITED HAS BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.

Copyright (c) 2009 Visibo Limited- contactus@visibotech.com. All rights reserved.
*/
var tabDataMap={},tabRegistry={},windowFocusTabId={},windowRegistry=[],currentRowId=[0],rowDataMap={},rowRegistry=[],ENTRIES_PER_TAB=10,MAX_RECENT_TABS=10;chrome.tabs.onSelectionChanged.addListener(function(a){windowFocusTabId[tabDataMap[a].windowId]=a;chrome.tabs.captureVisibleTab(tabDataMap[a].windowId,function(b){tabDataMap[a].screenCap=b})});
function reportNumTabs(){for(var a=0,b=0;b<windowRegistry.length;b++)a+=tabRegistry[windowRegistry[b]].length;chrome.browserAction.setBadgeText({text:""+a});if(a>=45)chrome.browserAction.setBadgeBackgroundColor({color:[255,0,0,255]});else if(a>=30)chrome.browserAction.setBadgeBackgroundColor({color:[255,145,0,255]});else if(a>=20)chrome.browserAction.setBadgeBackgroundColor({color:[255,220,0,255]});else a>=10?chrome.browserAction.setBadgeBackgroundColor({color:[175,230,50,255]}):chrome.browserAction.setBadgeBackgroundColor({color:[0,
255,0,255]})}function tabData(a,b){this.id=a;this.windowId=b;this.favIconURL=this.title="";this.URL=[];this.screenCap=null;this.popped=this.pinned=false;this.parent=this.id}
chrome.tabs.onUpdated.addListener(function(a,b,d){if(d.title)tabDataMap[a].title=d.title;if(d.favIconUrl)tabDataMap[a].favIconURL=d.favIconUrl;if(b.url&&tabDataMap[a]){if(tabDataMap[a].URL)for(d=0;d<tabDataMap[a].URL.length;d++)if(tabDataMap[a].URL[d]==b.url){tabDataMap[a].URL.splice(d,1);break}tabDataMap[a].URL.push(b.url);tabDataMap[a].URL.length>ENTRIES_PER_TAB&&tabDataMap[a].URL.shift()}else tabDataMap[a]&&chrome.tabs.getSelected(tabDataMap[a].windowId,function(c){c.id==a&&chrome.tabs.captureVisibleTab(tabDataMap[a].windowId,
function(e){tabDataMap[a].screenCap=e})})});
chrome.tabs.onCreated.addListener(function(a){if(!tabDataMap[a.id]){tabDataMap[a.id]=new tabData(a.id,a.windowId);if(!tabRegistry[a.windowId]){tabRegistry[a.windowId]=[];windowRegistry.push(a.windowId)}tabRegistry[a.windowId].push(a.id)}if(windowFocusTabId[a.windowId])if(tabDataMap[a.id].URL.length==0&&a.url!="chrome://newtab/")tabDataMap[a.id].parent=windowFocusTabId[a.windowId];if(a.title)tabDataMap[a.id].title=a.title;tabDataMap[a.id].URL.push(a.url);tabDataMap[a.id].favIconURL=a.favIconUrl;reportNumTabs()});
chrome.tabs.onAttached.addListener(function(a,b){if(!tabRegistry[b.newWindowId]){tabRegistry[b.newWindowId]=[];windowRegistry.push(b.newWindowId)}for(i=0;i<tabRegistry[tabDataMap[a].windowId].length;i++)if(tabRegistry[tabDataMap[a].windowId][i]==a){tabRegistry[tabDataMap[a].windowId].splice(i,1);break}tabDataMap[a].windowId=b.newWindowId;tabRegistry[b.newWindowId].push(a)});
chrome.tabs.onRemoved.addListener(function(a){tabDataMap[a].popped||autoPopTab(a);for(i=0;i<tabRegistry[tabDataMap[a].windowId].length;i++)if(tabRegistry[tabDataMap[a].windowId][i]==a){tabRegistry[tabDataMap[a].windowId].splice(i,1);break}delete tabDataMap[a];reportNumTabs()});
function init(){if(!localStorage.getItem("welcomeshown")&&!localStorage.getItem("rowRegistry")&&!localStorage.getItem("rowDataMap")){localStorage.setItem("welcomeshown","true");chrome.tabs.create({url:"./welcome.html"})}chrome.windows.getAll({populate:true},function(a){a.forEach(function(b){var d=b.id;window.focus();b.tabs.forEach(function(c){tabDataMap[c.id]=new tabData(c.id,d);if(!tabRegistry[d]){tabRegistry[d]=[];windowRegistry.push(d)}tabRegistry[d].push(c.id);tabDataMap[c.id].title=c.title;tabDataMap[c.id].favIconURL=
c.favIconUrl;if(c.url){tabDataMap[c.id].URL.push(c.url);tabDataMap[c.id].URL.length>ENTRIES_PER_TAB&&tabDataMap[c.id].URL.shift()}})});reportNumTabs()});initializeRows()}function askTabToFocus(a){window.blur();chrome.tabs.sendRequest(a,{command:"focus"},function(b){console.log(b.result)})}var lastFocusId;
chrome.extension.onRequest.addListener(function(a){if(a.command=="popup"){var b=chrome.extension.getURL("popup.html");chrome.windows.getLastFocused(function(d){lastFocusId=d.id;window.open(b+"?tmtwindow","TooManyTabs","width=800, height=600, resizable=no, statusbar=no, toolbar=no, location=no, scrollbars=no")})}});function rowData(a,b,d){this.id=a;this.name=b;this.tip=d;this.tabs=[]}
function initializeRows(){if(localStorage.rowDataMap){rowDataMap=JSON.parse(localStorage.getItem("rowDataMap"));rowRegistry=JSON.parse(localStorage.getItem("rowRegistry"));currentRowId[0]=JSON.parse(localStorage.getItem("currentRowId"));if(currentRowId==null){currentRowId=[];currentRowId[0]=0}if(currentRowId[0]==null)currentRowId[0]=0;parseInt(currentRowId[0])>=0||(currentRowId[0]=0)}else{rowDataMap[0]=new rowData(0,"Suspended Tabs","Put your idle tabs here to reduce tab overflow. Memory will be released but forms and videos aren't saved.");
rowRegistry.push(0);rowDataMap[1]=new rowData(1,"Read Later","Got tabs you want to read/handle later but don't want to bookmark them? Put them here.");rowRegistry.push(1);rowDataMap[2]=new rowData(2,"Easy Access","Tabs here will not go away unless you explicitly remove them. Click on the icon for a sub-menu. ");rowRegistry.push(2);rowDataMap[3]=new rowData(3,"Recently Closed","Won't be cleared along with history. Can be manually cleared. Click on the icon for a sub-menu.");rowRegistry.push(3);currentRowId[0]=
0;localStorage.setItem("rowDataMap",JSON.stringify(rowDataMap));localStorage.setItem("rowRegistry",JSON.stringify(rowRegistry));localStorage.setItem("currentRowId",JSON.stringify(currentRowId[0]))}}function popTab(a){tabDataMap[a].screenCap=null;tabDataMap[a].popped=true;rowDataMap[currentRowId[0]].tabs.push(tabDataMap[a]);chrome.tabs.remove(a);localStorage.setItem("rowDataMap",JSON.stringify(rowDataMap))}
function autoPopTab(a){tabDataMap[a].screenCap=null;rowDataMap[3].tabs.unshift(tabDataMap[a]);for(localStorage.setItem("rowDataMap",JSON.stringify(rowDataMap));rowDataMap[3].tabs.length>=MAX_RECENT_TABS;)rowDataMap[3].tabs.pop()}function getCurrentRow(){return rowDataMap[currentRowId[0]]}function nextRow(){currentRowId[0]=currentRowId[0]!=3?3:0;localStorage.setItem("currentRowId",JSON.stringify(currentRowId[0]))}
function prevRow(){currentRowId[0]=currentRowId[0]!=3?3:0;localStorage.setItem("currentRowId",JSON.stringify(currentRowId[0]))}
function restoreTab(a,b,d){var c=rowDataMap[currentRowId[0]].tabs[a];chrome.tabs.create({url:c.URL[c.URL.length-1],selected:b},function(e){if(!tabDataMap[e.id]){tabDataMap[e.id]=new tabData(e.id,e.windowId);tabRegistry[e.windowId].push(e.id)}tabDataMap[e.id].title=c.title;tabDataMap[e.id].favIconURL=c.favIconURL;tabDataMap[e.id].screenCap=c.screenCap;for(var f=0;f<c.URL.length;f++)tabDataMap[e.id].URL.push(c.URL[f]);f=false;if(!c.pinned&&currentRowId[0]!=2){rowDataMap[currentRowId[0]].tabs.splice(a,
1);f=true;localStorage.setItem("rowDataMap",JSON.stringify(rowDataMap))}d(e.id,f)})}function removeTabInRow(a){rowDataMap[currentRowId[0]].tabs.splice(a,1);localStorage.setItem("rowDataMap",JSON.stringify(rowDataMap))}function setThemeColor(a){localStorage.setItem("themeColor",JSON.stringify(a))}function getThemeColor(){return localStorage.getItem("themeColor")?JSON.parse(localStorage.getItem("themeColor")):0};
